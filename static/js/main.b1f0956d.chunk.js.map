{"version":3,"sources":["config/axiosConfig.js","actions/authActions.js","actions/types.js","components/common/TextInput.js","components/common/EmailInput.js","components/common/PasswordInput.js","components/common/ConfirmPasswordInput.js","components/common/FormErrors.js","components/auth/RegisterForm.js","components/auth/ManageRegisterPage.js","components/auth/LoginForm.js","components/auth/ManageLoginPage.js","components/cheatsheet/SearchInput.js","actions/cheatActions.js","components/cheatsheet/CheatCommand.js","components/cheatsheet/CheatSheet.js","components/cheatsheet/CheatSheetList.js","components/cheatsheet/ManageCheatSheetPage.js","components/cheatsheet/AddCheatSheetForm.js","actions/commandActions.js","components/command/ManageCheatCommandsPage.js","components/command/addCheatCommandPage.js","components/auth/NavigationBar.js","components/auth/LogoutView.js","components/common/NotFound.js","components/common/Footer.js","App.js","store/initialState.js","reducers/cheatReducer.js","reducers/commandReducer.js","reducers/singleCheatSheetReducer.js","reducers/authReducer.js","reducers/index.js","store/store.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","timeout","headers","Content-Type","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","registerUser","userData","history","dispatch","post","then","res","push","type","payload","data","catch","error","response","loginUser","user","jsonwebtoken","decode","setItem","logoutUser","removeItem","TextInput","_ref","name","label","onChange","placeholder","value","formErrors","wrapperClass","username","length","react_default","a","createElement","className","htmlFor","EmailInput","email","required","PasswordInput","password","ConfirmPasswordInput","confirm","FormErrors","Object","keys","map","fieldName","i","key","RegisterForm","handleOnChange","handleOnSubmit","isDisabled","onSubmit","FormErrors_FormErrors","common_TextInput","common_EmailInput","common_PasswordInput","common_ConfirmPasswordInput","disabled","ManageRegisterPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","target","setState","defineProperty","validateField","preventDefault","_this$state","state","authActions","auth","usernameValid","emailValid","passwordValid","formValid","fieldValidationErrors","confirmValid","trim","match","validateForm","auth_RegisterForm","Component","connect","bindActionCreators","withRouter","LoginForm","ManageLoginPage","auth_LoginForm","SearchInput","class","fetchCheatSheets","get","fetchSingleCheatSheet","cheatId","resetSingleCheatSheet","searchCheat","searchText","createCheatSheet","cheatsData","newCheat","deleteCheatSheet","delete","CheatCommand","command","handleDelete","_id","description","onClick","CheatSheet","cheat","commands","Link","to","title","cheatsheet_CheatCommand","CheatSheetList","cheats","filter","toLowerCase","includes","index","cheatsheet_CheatSheet","ManageCheatSheetPage","cheatActions","event","prevProps","params","cheatsheet_SearchInput","cheatsheet_CheatSheetList","AddCheatSheetForm","cheatData","handleOnCancel","titleValid","variant","color","singleCheat","fetchAllcheatCommands","deleteCommand","commandId","addCommand","commandData","newCommand","ManageCheatCommandsPage","commandActions","_this2","AddCheatCommandPage","descriptionValid","commandValid","NavigationBar","handleLogout","isAuthenticated","navBarLinks","LogoutView","NotFound","Footer","SecretRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","App","BrowserRouter","auth_NavigationBar","Switch","exact","path","App_SecretRoute","common_Footer","initialState","docs","total","limit","page","pages","currentCheat","singleCheatSheet","cheatReducer","arguments","undefined","action","toConsumableArray","objectSpread","commandReducer","errors","singleCheatReducer","authReducer","isRegistered","rootReducer","combineReducers","singleCheatSheetReducer","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","actions","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1f0956d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst url = 'http://35.231.196.222';\n\nconst instance = axios.create({\n  baseURL: url,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\ninstance.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  config.headers.Authorization = token ? `Bearer ${token}` : '';\n  config.headers['Access-Control-Allow-Origin'] = '*';\n  return config;\n});\n\nexport default instance;\n","import instance from '../config/axiosConfig';\nimport jsonwebtoken from 'jsonwebtoken';\nimport * as actions from './types';\n\nexport const registerUser = (userData, history)  => dispatch => {\n  instance.post('/api/user/register', userData)\n    .then(res => {\n      history.push('/Login');\n      dispatch({\n        type: actions.REGISTER_USER_SUCCESS,\n        payload: res.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: actions.REGISTER_USER_FAILURE,\n        payload: error.response.data\n      });\n    });\n};\n\nexport const loginUser = (userData, history)  => dispatch => {\n  instance.post('/api/user/login', userData)\n    .then(res => {\n      const token = res.data.token;\n      const user = jsonwebtoken.decode(token);\n      dispatch({\n        type: actions.LOGIN_USER_SUCCESS,\n        payload: user\n      });\n      localStorage.setItem('token',token);\n      history.push('/cheats');\n    }).catch(error => {\n      dispatch({\n        type: actions.LOGIN_USER_FAILURE,\n        payload: error.response\n      });\n    });\n};\n\nexport const logoutUser = (history) => dispatch =>{\n  localStorage.removeItem('token');\n  history.push('/Login');\n  dispatch({\n    type: actions.LOGOUT_USER_SUCCESS\n  });\n};\n","export const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILURE = 'LOGIN_USER_FAILURE';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILURE ='REGISTER_USER_FAILURE';\nexport const LOGOUT_USER_SUCCESS = 'LOGOUT_USER_SUCCESS';\n\n// cheats type\nexport const CREATE_CHEAT_SUCCESS = 'CREATE_CHEAT_SUCCESS';\nexport const CREATE_CHEAT_FAILURE = 'CREATE_CHEAT_FAILURE';\nexport const EDIT_CHEAT_SUCCESS = 'EDIT_CHEAT_SUCCESS';\nexport const DELETE_CHEAT_SUCCESS = 'DELETE_CHEAT_SUCCESS';\nexport const DELETE_CHEAT_FAILURE = 'DELETE_CHEAT_FAILURE';\nexport const LOAD_CHEAT_SUCCESS = 'LOAD_CHEAT_SUCCESS';\nexport const LOAD_CHEAT_FAILURE = 'LOAD_CHEAT_FAILURE';\nexport const LOAD_SINGLE_CHEAT_SHEET_SUCCESS = 'LOAD_SINGLE_CHEAT_SHEET_SUCCESS';\nexport const LOAD_SINGLE_CHEAT_SHEET_FAILURE = 'LOAD_SINGLE_CHEAT_SHEET_FAILURE';\nexport const RESET_SINGLE_CHEAT_SHEET = 'RESET_SINGLE_CHEAT_SHEET';\nexport const SEARCH_CHEAT = 'SEARCH_CHEAT';\n\n// commands\nexport const LOAD_COMMANDS_SUCCESS = 'LOAD_COMMANDS_SUCCESS';\nexport const LOAD_COMMANDS_FAILURE ='LOAD_COMMANDS_FAILURE';\nexport const ADD_COMMAND_SUCCESS = 'ADD_COMMAND_SUCCESS';\nexport const ADD_COMMAND_FAILURE = 'ADD_COMMAND_FAILURE';\nexport const EDIT_COMMAND_SUCCESS = 'EDIT_COMMAND_SUCCESS';\nexport const EDIT_COMMAND_FAILURE = 'EDIT_COMMAND_FAILURE';\nexport const DELETE_COMMAND_SUCCESS = 'DELETE_COMMAND_SUCCESS';\nexport const DELETE_COMMAND_FAILURE = 'DELETE_COMMAND_FAILURE';\nexport const FETCH_ONE_COMMAND_SUCCESS = 'FETCH_ONE_COMMAND_SUCCESS';\nexport const FETCH_ONE_COMMAND_FAILURE = 'FETCH_ONE_COMMAND_FAILURE';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInput = ({name, label, onChange, placeholder, value, formErrors}) => {\n  let wrapperClass = 'form-group';\n  if (formErrors && formErrors.username.length > 0) {\n    wrapperClass += ' ' + 'has-error';\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label\n        htmlFor={name}>{label}\n      </label>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          name={name}\n          className='form-control'\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nTextInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  formErrors: PropTypes.object.isRequired\n};\n\nexport default TextInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst EmailInput = ({name, label, onChange, value, formErrors}) => {\n  let wrapperClass = 'form-group';\n  if (formErrors && formErrors.email.length > 0) {\n    wrapperClass += ' ' + 'has-error';\n  }\n  return (\n    <div className={wrapperClass}>\n      <label\n        htmlFor={name}>\n        {label}\n      </label>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          required\n          name={name}\n          className='form-control'\n          placeholder='johndoe@email.com'\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nEmailInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  formErrors: PropTypes.object.isRequired\n};\n\nexport default EmailInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PasswordInput = ({name, label, onChange, placeholder, value, formErrors}) => {\n  let wrapperClass = 'form-group';\n  if (formErrors && formErrors.password.length > 0) {\n    wrapperClass += ' ' + 'has-error';\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={name}>{label}</label>\n      <div className=\"field\">\n        <input\n          type=\"password\"\n          name={name}\n          className=\"form-control\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nPasswordInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\n\nexport default PasswordInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConfirmPasswordInput = ({name, label, onChange, value, formErrors}) => {\n  let wrapperClass = 'form-group';\n  if (formErrors && formErrors.confirm.length > 0) {\n    wrapperClass += ' ' + 'has-error';\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={name}>\n        {label}\n      </label>\n      <div className=\"field\">\n        <input\n          type=\"password\"\n          required\n          name={name}\n          className='form-control'\n          placeholder='Confirm Password'\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nConfirmPasswordInput.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  formErrors: PropTypes.object.isRequired\n};\n\nexport default ConfirmPasswordInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FormErrors = ({ formErrors }) => {\n  return (\n    <div className=\"formErrors\">\n      {\n        Object.keys(formErrors).map((fieldName, i) => {\n          if (formErrors[fieldName].length > 0) {\n            return (\n              <p key={i}>{fieldName} {formErrors[fieldName]}</p>\n            );\n          } else {\n            return '';\n          }\n        })\n      }\n    </div>);\n};\n\nFormErrors.propTypes = {\n  formErrors: PropTypes.object.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextInput from '../common/TextInput';\nimport EmailInput from '../common/EmailInput';\nimport PasswordInput from '../common/PasswordInput';\nimport ConfirmPasswordInput from '../common/ConfirmPasswordInput';\nimport {FormErrors} from '../common/FormErrors';\n\nconst RegisterForm = ({ handleOnChange, handleOnSubmit, formErrors, isDisabled}) => {\n  return (\n    <form className='login-form'\n      onSubmit={handleOnSubmit}>\n      <h3>Register</h3>\n      <FormErrors\n        formErrors={formErrors} />\n      <br/>\n      <TextInput\n        name='username'\n        label='Username'\n        placeholder='Username'\n        formErrors={formErrors}\n        onChange={handleOnChange}\n      />\n\n      <EmailInput\n        name='email'\n        label='Email'\n        placeholder='Email'\n        formErrors={formErrors}\n        onChange={handleOnChange}\n      />\n\n      <PasswordInput\n        name='password'\n        label='Password'\n        placeholder='Password'\n        formErrors={formErrors}\n        onChange={handleOnChange}\n      />\n\n      <ConfirmPasswordInput\n        name='confirm'\n        label='Confirm password'\n        placeholder='Confirm'\n        formErrors={formErrors}\n        onChange={handleOnChange}\n      />\n      <button\n        type=\"submit\"\n        className='btn btn-success'\n        disabled={!isDisabled}\n      >Register</button>\n    </form>\n  );\n};\n\nRegisterForm.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object.isRequired,\n  isDisabled: PropTypes.bool.isRequired\n};\n\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../actions/authActions';\nimport RegisterForm from './RegisterForm';\n\nclass ManageRegisterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth: {},\n      username: '',\n      email: '',\n      password: '',\n      confirm: '',\n      usernameValid: false,\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      formErrors: {\n        username: '',\n        password: '',\n        email: '',\n        confirm: ''\n      }\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let usernameValid = this.state.usernameValid\n    let emailValid = this.state.emailValid\n    let passwordValid = this.state.passwordValid\n    let confirmValid = this.state.confirmValid\n\n    switch (fieldName) {\n      case 'username':\n        usernameValid = value.trim().length >= 5;\n        fieldValidationErrors.username = usernameValid ?\n         '' : 'should be at least 5 characters.';\n        break;\n      case 'email':\n        emailValid = value.match(\n          /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n        );\n        fieldValidationErrors.email = emailValid ?\n        '' : 'is not valid.';\n        break;\n      case 'password':\n        passwordValid = value.trim().length >= 8\n        fieldValidationErrors.password = passwordValid ?\n        '' : 'should be at least 8 characters.';\n        break;\n      case 'confirm':\n        confirmValid = value.trim().length >= 8 &&\n        value.trim() === this.state.password.trim()\n        fieldValidationErrors.confirm = confirmValid ?\n        '' : 'do not match';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      usernameValid: usernameValid,\n      emailValid: emailValid,\n      passwordValid: passwordValid,\n      confirmValid: confirmValid\n    }, this.validateForm)\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.usernameValid &&\n      this.state.emailValid &&\n      this.state.passwordValid &&\n      this.state.confirmValid\n    })\n  }\n\n  handleOnChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    this.setState({[name]: value}, () => {\n      this.validateField(name, value)\n    });\n  }\n\n  handleOnSubmit = (e) => {\n    e.preventDefault();\n    const { username, email, password} = this.state;\n    const userData = {\n      username: username,\n      email: email,\n      password: password\n    }\n    this.props.authActions.registerUser(\n      userData, this.props.history\n    )\n  }\n\n  render(){\n    const isDisabled = this.state.formValid\n    return (\n      <div\n        className='auth-form-container'>\n        <RegisterForm\n          isDisabled={isDisabled}\n          formErrors={this.state.formErrors}\n          handleOnChange={this.handleOnChange}\n          handleOnSubmit={this.handleOnSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nManageRegisterPage.propTypes = {\n  authActions: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authActions: bindActionCreators(authActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageRegisterPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport EmailInput from '../common/EmailInput';\nimport PasswordInput from '../common/PasswordInput';\nimport {FormErrors} from '../common/FormErrors';\n\nconst LoginForm = ({ handleOnChange, handleOnSubmit, formErrors, isDisabled}) => {\n  return (\n    <form className='login-form' onSubmit={handleOnSubmit}>\n      <h3>Login</h3>\n      <FormErrors formErrors={formErrors} />\n      <br/>\n      <EmailInput\n        name='email'\n        label='Email'\n        placeholder='Email'\n        formErrors={formErrors}\n        onChange={handleOnChange}\n      />\n\n      <PasswordInput\n        name='password'\n        label='Password'\n        placeholder='Password'\n        formErrors={formErrors}\n        onChange={handleOnChange}\n      />\n      <button\n        type='submit'\n        className='btn btn-success'\n        disabled={!isDisabled}\n      >Login</button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnSubmit: PropTypes.func.isRequired,\n  formErrors: PropTypes.object.isRequired,\n  isDisabled: PropTypes.bool.isRequired\n};\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../actions/authActions';\nimport LoginForm from './LoginForm';\n\nclass ManageLoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      emailValid: false,\n      passwordValid: false,\n      formValid: false,\n      formErrors: {\n        password: '',\n        email: ''\n      }\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n    case 'email':\n      emailValid = value.match(\n        /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n      );\n      fieldValidationErrors.email = emailValid ?\n      '' : 'is not valid.';\n      break;\n    case 'password':\n      passwordValid = value.trim().length >= 8;\n      fieldValidationErrors.password = passwordValid ?\n      '' : 'should be at least 8 characters.';\n      break;\n    default:\n      break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid,\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid &&\n      this.state.passwordValid\n    });\n  }\n\n  handleOnChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    this.setState({[name]: value}, () => {\n      this.validateField(name, value)\n    });\n  }\n\n  handleOnSubmit = (e) => {\n    e.preventDefault();\n    const {email, password} = this.state;\n    const userData = {\n      email: email,\n      password: password\n    }\n\n    this.props.authActions.loginUser(\n      userData, this.props.history\n    )\n  }\n\n  render(){\n    const isDisabled = this.state.formValid\n    return (\n      <div className='auth-form-container'>\n        <LoginForm\n          isDisabled={isDisabled}\n          formErrors={this.state.formErrors}\n          handleOnChange={this.handleOnChange}\n          handleOnSubmit={this.handleOnSubmit}\n        />\n      </div>\n    );\n  }\n}\n\nManageLoginPage.propTypes = {\n  authActions: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n    return {\n      auth: state.auth\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authActions: bindActionCreators(authActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageLoginPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchInput = ({ handleOnChange, value}) => {\n  if(localStorage.getItem('token')) {\n    return (\n      <div class=\"main_search\">\n        <form>\n          <div\n            class=\"form-group has-feedback has-search\">\n            <input\n              type=\"text\"\n              value={value}\n              name=\"search\"\n              class=\"form-control\"\n              placeholder=\"Search\"\n              onChange={handleOnChange}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n  return '';\n};\n\nSearchInput.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\nexport default SearchInput;\n","import instance from '../config/axiosConfig';\nimport * as actions from './types';\n\nexport const fetchCheatSheets = ()  => dispatch => {\n  instance.get('/user/cheats')\n    .then(res => {\n      dispatch({\n        type: actions.LOAD_CHEAT_SUCCESS,\n        payload: res.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: actions.LOAD_CHEAT_FAILURE,\n        payload: error.response\n      });\n    });\n};\n\nexport const fetchSingleCheatSheet = (cheatId) => dispatch => {\n  instance.get(`/user/cheats/${cheatId}`)\n    .then(res => {\n      dispatch({\n        type: actions.LOAD_SINGLE_CHEAT_SHEET_SUCCESS,\n        payload: res.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: actions.LOAD_SINGLE_CHEAT_SHEET_FAILURE,\n        payload: error.response\n      });\n    });\n};\n\nexport const resetSingleCheatSheet = () => dispatch => {\n  dispatch({\n    type: actions.RESET_SINGLE_CHEAT_SHEET,\n    payload: {}\n  });\n};\n\nexport const searchCheat = (searchText) => dispatch => {\n  dispatch({\n    type: actions.SEARCH_CHEAT,\n    payload: searchText\n  });\n};\n\nexport const createCheatSheet = (cheatsData)  => dispatch => {\n  instance.post('/user/cheats', cheatsData)\n    .then(res => {\n      dispatch({\n        type: actions.CREATE_CHEAT_SUCCESS,\n        payload: res.data.newCheat\n      });\n    }).catch(error => {\n      dispatch({\n        type: actions.CREATE_CHEAT_FAILURE,\n        payload: error.response\n      });\n    });\n};\n\nexport const deleteCheatSheet = (cheatId) => dispatch => {\n  instance.delete(`/user/cheats/${cheatId}`)\n    .then(res => {\n      dispatch({\n        type: actions.DELETE_CHEAT_SUCCESS,\n        payload: {\n          cheatId: cheatId,\n          res: res\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: actions.DELETE_CHEAT_FAILURE,\n        payload: error.response\n      });\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CheatCommand = ({ command, cheatId, handleDelete }) => {\n  if (!cheatId) {\n    return (\n      <li className=\"cheat_command\"\n        key={command._id}>\n        <div\n          className=\"cheat_command_item\">\n          <b\n            className=\"description\">\n            {command.description}\n          </b><br/>\n          <b\n            className=\"command\">\n            ${command.command}\n          </b>\n        </div>\n        <hr/>\n      </li>\n    );\n  }\n  return (\n    <li className=\"cheat_command\" key={command._id}>\n      <div>\n        <b\n          className=\"description\">\n          {command.description}\n        </b><br/>\n        $<b\n          className=\"command\">\n          {command.command}>\n        </b>\n      </div>\n      <div className=\"btn_container\">\n        <div>\n          <span\n            onClick={() => handleDelete(command._id)}\n            className=\"glyphicon glyphicon-trash delete_icons\">\n          </span>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nCheatCommand.propTypes = {\n  command: PropTypes.object.isRequired,\n  cheatId: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired\n};\n\nexport default CheatCommand;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport CheatCommand from './CheatCommand';\n\nconst CheatSheet = ({ cheat, handleDelete, cheatId }) => {\n  if (cheat.commands) {\n    return (\n      <div className=\"item\">\n        <div className=\"item_header\">\n          <Link  to={`/cheats/${cheat._id}/commands`}><h5>{cheat.title}</h5></Link>\n          <span onClick={() => handleDelete(cheat._id)} className=\"glyphicon glyphicon-trash delete_icon\"></span>\n          {/* <button >X</button> */}\n        </div>\n        <li className=\"card__text\">\n          {cheat.commands.map(\n            command => <CheatCommand\n              cheatId={cheatId}\n              command={command}/>)\n          }\n        </li>\n      </div>\n    );\n  }\n  if (cheat.title) {\n    return <h1 className=\"card\">{cheat.title}</h1>;\n  }\n  return <h1>No items available</h1>;\n\n};\n\nCheatSheet.propTypes = {\n  cheats: PropTypes.array.isRequired,\n  cheatId: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired\n};\n\nexport default CheatSheet;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheatSheet from './CheatSheet';\n\nconst CheatSheetList = ({ cheats, cheatId, handleDelete, searchText }) => {\n  if (cheats.length > 0) {\n    return (\n      <ul className=\"masonry\">\n        {\n          cheats\n            .filter(cheat => cheat.title.toLowerCase().includes(searchText.toLowerCase()))\n            .map((cheat, index) => (\n              <CheatSheet\n                key={index}\n                cheatId={cheatId}\n                handleDelete={handleDelete}\n                cheat={cheat}/>\n            )\n            )\n        }\n      </ul>\n    );\n  }\n  return <h1>Your have no Cheats</h1>;\n};\n\nCheatSheetList.propTypes = {\n  searchText: PropTypes.string.isRequired,\n  cheats: PropTypes.array.isRequired,\n  cheatId: PropTypes.string.isRequired,\n  handleDelete: PropTypes.func.isRequired\n};\n\nexport default CheatSheetList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as cheatActions from '../../actions/cheatActions';\nimport CheatSheetList from './CheatSheetList';\nimport SearchInput from './SearchInput';\n\nclass ManageCheatSheetPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: ''\n    }\n  }\n  componentDidMount(){\n    this.props.cheatActions.fetchCheatSheets();\n    this.props.cheatActions.resetSingleCheatSheet();\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.cheats !== prevProps.cheats) {\n      this.setState({cheats: this.props.cheats});\n    }\n  }\n\n  handleDelete = (cheatId) => {\n    if (cheatId) {\n      this.props.cheatActions.deleteCheatSheet(cheatId)\n    }\n    return;\n  }\n\n  handleOnChange = (event) => {\n    this.setState({ searchText: event.target.value })\n  };\n\n  render() {\n    const {cheats}  = this.props;\n    const { cheatId } = this.props.match.params;\n    if (cheats.length > 0) {\n      return (\n        <div className='main_content'>\n          <SearchInput\n            value={this.state.searchText}\n            handleOnChange={this.handleOnChange}\n          />\n          <CheatSheetList\n            searchText={this.state.searchText}\n            cheatId={cheatId}\n            handleDelete={this.handleDelete}\n            cheats={cheats}\n          />\n        </div>\n      );\n    }\n    return (\n      <div className='empty_content'>\n        <h2>No cheats available for this User</h2>\n      </div>\n    );\n  }\n}\n\nManageCheatSheetPage.propTypes = {\n  cheats: PropTypes.array.isRequired,\n  cheatActions: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  cheats: state.cheats\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  cheatActions: bindActionCreators(cheatActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageCheatSheetPage));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Button from '@material-ui/core/Button';\nimport * as cheatActions from '../../actions/cheatActions';\nimport TextInput from '../common/TextInput';\nimport {FormErrors} from '../common/FormErrors';\n\nclass AddCheatSheetForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      titleValid: false,\n      formValid: false,\n      formErrors: {\n        title: ''\n      }\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let titleValid = this.state.titleValid\n\n    switch (fieldName) {\n      case 'title':\n        titleValid = value.length >= 5;\n        fieldValidationErrors.title = titleValid ?\n        '' : 'should be at least 5 characters.';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      titleValid: titleValid,\n    }, this.validateForm)\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.titleValid\n    })\n  }\n\n  handleOnChange = (e) => {\n    const name = e.target.name\n    const value = e.target.value\n    this.setState({[name]: value}, () => {\n       this.validateField(name, value)\n     });\n  }\n\n  handleOnSubmit = (e) => {\n    e.preventDefault();\n    const { title } = this.state;\n    const cheatData = {title: title}\n    this.props.cheatActions.createCheatSheet(cheatData)\n    this.setState({title: ''})\n    this.props.history.push('/cheats')\n  }\n\n  handleOnCancel = (e) => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.push('/cheats')\n  }\n\n  render() {\n    const isDisabled = this.state.formValid\n    return (\n      <form className=\"add_cheat_form\"\n        onSubmit={this.handleOnSubmit}>\n        <FormErrors formErrors={this.state.formErrors} />\n        <TextInput\n          placeholder=\"e.g Configuration\"\n          label=\"Title\"\n          name=\"title\"\n          onChange={this.handleOnChange}\n        />\n\n        <button\n          variant=\"contained\"\n          color=\"primary\"\n          type='submit'\n          disabled={!isDisabled}\n          className='btn btn-success'\n        >Add cheat</button>\n        <button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.handleOnCancel}\n          className='btn btn-danger'\n          type='button'>Cancel</button>\n      </form>\n    );\n  }\n}\n\nAddCheatSheetForm.propTypes = {\n  singleCheat: PropTypes.object.isRequired,\n  cheatActions: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  singleCheat: state.singleCheat\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  cheatActions: bindActionCreators(cheatActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddCheatSheetForm));\n","import instance from '../config/axiosConfig';\nimport * as actions from './types';\n\nexport const fetchAllcheatCommands = (cheatId)  => dispatch => {\n  instance.get(`/user/cheats/${cheatId}/commands`)\n    .then(res => {\n      dispatch({\n        type: actions.LOAD_COMMANDS_SUCCESS,\n        payload: res.data\n      });\n    })\n    .catch(error => {\n      dispatch({\n        type: actions.LOAD_COMMANDS_FAILURE,\n        payload: error.response\n      });\n    });\n};\n\nexport const deleteCommand = (cheatId, commandId) => dispatch => {\n  instance.delete(`/user/cheats/${cheatId}/commands/${commandId}`)\n    .then(res => {\n      dispatch({\n        type: actions.DELETE_COMMAND_SUCCESS,\n        payload: {\n          commandId: commandId,\n          data: res\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: actions.DELETE_COMMAND_FAILURE,\n        payload: error.response\n      });\n    });\n};\n\nexport const addCommand = (commandData, cheatId)  => dispatch => {\n  instance.post(`/user/cheats/${cheatId}/commands`, commandData)\n    .then(res => {\n      dispatch({\n        type: actions.ADD_COMMAND_SUCCESS,\n        payload: res.data.newCommand\n      });\n    }).catch(error => {\n      dispatch({\n        type: actions.ADD_COMMAND_FAILURE,\n        payload: error.response\n      });\n    });\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as commandActions from '../../actions/commandActions';\nimport * as cheatActions from '../../actions/cheatActions';\nimport CheatCommand from '../cheatsheet/CheatCommand';\n\nclass ManageCheatCommandsPage extends Component {\n\n  componentDidMount(){\n    const { cheatId } = this.props.match.params;\n    if(cheatId){\n      this.props.commandActions.fetchAllcheatCommands(cheatId);\n      this.props.cheatActions.fetchSingleCheatSheet(cheatId);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.commands !== prevProps.commands) {\n      this.setState({commands: prevProps.commands});\n    }\n  }\n\n  handleDelete = (commandId) => {\n    if (commandId) {\n      const { cheatId } = this.props.match.params;\n      this.props.commandActions.deleteCommand(\n        cheatId,\n        commandId\n      )\n    }\n  }\n\n  render() {\n    const { title } = this.props.singleCheat;\n    const { commands } = this.props;\n    const { cheatId } = this.props.match.params;\n    return (\n      <div\n        className=\"single_cheat\">\n        <ul>\n          <h5 className=\"item_header\">\n            {title}\n          </h5>\n          {\n            commands.length > 0 ?\n            commands.map(command => <CheatCommand\n                cheatId={cheatId}\n                handleDelete={this.handleDelete}\n                command={command}/>) :\n                <div className=\"empty_command\"><h3>No commands found</h3></div>\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nManageCheatCommandsPage.propTypes = {\n  commands: PropTypes.array.isRequired,\n  singleCheat: PropTypes.object.isRequired,\n  commandActions: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  singleCheat: state.singleCheat,\n  commands: state.commands\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  commandActions: bindActionCreators(commandActions, dispatch),\n  cheatActions: bindActionCreators(cheatActions, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageCheatCommandsPage));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as commandActions from '../../actions/commandActions';\nimport TextInput from '../common/TextInput';\nimport {FormErrors} from '../common/FormErrors';\n\nclass AddCheatCommandPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      description: '',\n      command: '',\n      descriptionValid: false,\n      commandValid: false,\n      formValid: false,\n      formErrors: {\n        description: '',\n        command: ''\n      }\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let descriptionValid = this.state.descriptionValid\n    let commandValid = this.state.commandValid\n    switch (fieldName) {\n      case 'description':\n        descriptionValid = value.length >= 5;\n        fieldValidationErrors.title = descriptionValid ?\n        '' : 'should be at least 5 characters.';\n        break;\n      case 'command':\n        commandValid = value.length >= 5;\n        fieldValidationErrors.title = commandValid ?\n        '' : 'should be at least 5 characters.';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      descriptionValid: descriptionValid,\n      commandValid: commandValid,\n    }, this.validateForm)\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.descriptionValid &&\n      this.state.commandValid\n    })\n  }\n\n  handleOnChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value}, () => {\n      this.validateField(name, value)\n    });\n  }\n\n  handleOnSubmit = (e) => {\n    e.preventDefault();\n    const { cheatId } = this.props.match.params;\n    const { description, command } = this.state;\n    const commandData = {\n      description: description,\n      command: command\n    }\n\n    this.props.commandActions.addCommand(\n      commandData,\n      cheatId\n    )\n\n    this.setState({\n      description: '',\n      command: ''\n    })\n\n    this.props.history.push(\n      `/cheats/${cheatId}/commands`\n    )\n  }\n\n  handleOnCancel = (e) => {\n    e.preventDefault();\n    const { history } = this.props;\n    history.push(\n      `/cheats/${this.props.match.params.cheatId}/commands`\n    )\n  }\n\n  render() {\n    const isDisabled = this.state.formValid\n    return (\n      <form\n        className=\"add_cheat_form\"\n        onSubmit={this.handleOnSubmit}>\n        <FormErrors formErrors={this.state.formErrors} />\n        <TextInput\n          placeholder=\"e.g clone repo\"\n          label=\"Description\"\n          name=\"description\"\n          onChange={this.handleOnChange}\n        />\n\n        <TextInput\n          placeholder=\"e.g git clone url\"\n          label=\"Command\"\n          name=\"command\"\n          onChange={this.handleOnChange}\n        />\n\n        <button\n          className='btn btn-success'\n          disabled={!isDisabled}\n          type='submit'>Save\n        </button>\n        <button\n          onClick={this.handleOnCancel}\n          type='button'\n          className='btn btn-danger'><b>X</b>\n        </button>\n      </form>\n    );\n  }\n}\n\nAddCheatCommandPage.propTypes = {\n  singleCheat: PropTypes.object.isRequired,\n  commandActions: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  singleCheat: state.singleCheat\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  commandActions: bindActionCreators(\n    commandActions, dispatch\n  )\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddCheatCommandPage));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../actions/authActions';\n\nclass NavigationBar extends Component {\n  navBarLinks() {\n    const { _id } = this.props.singleCheat;\n    if(this.props.auth.isAuthenticated) {\n      return (\n        <div className=\"nav_menu\">\n          <Link className=\"nav_link\"\n            to=\"/cheats\">\n            <b>\n              {this.props.auth.user.username}\n            </b>\n          </Link>\n          <div\n            className='topnav-right'>\n            <Link\n              className=\"nav_link\"\n              to={\n                 _id ?\n                `/cheats/${_id}/add-command` :\n                \"/createCheat\"\n                }>\n             { _id ? '+ Command' : '+ Cheat' }\n            </Link>\n            <Link\n              className=\"nav_link\"\n              onClick={this.handleLogout}\n              to=\"/logout\">Logout</Link>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div\n        className=\"nav_menu\">\n        <div\n          className=\"topnav-right\">\n          <Link\n            className=\"nav_link\" to=\"/\">\n            Register\n          </Link>\n          <Link\n            className=\"nav_link\"\n            to=\"/Login\">Login</Link>\n        </div>\n      </div>\n    );\n  }\n\n  handleLogout = (e) => {\n    e.preventDefault();\n    this.props.authActions.logoutUser(this.props.history);\n  }\n\n  render(){\n    return this.navBarLinks();\n  }\n}\n\n\nNavigationBar.propTypes = {\n  singleCheat: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => {\n  return {\n    singleCheat: state.singleCheat,\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authActions: bindActionCreators(authActions, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(NavigationBar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as authActions from '../../actions/authActions';\n\nclass LogoutView extends Component {\n\n  componentWillMount() {\n    const {history} =  this.props;\n    this.props.authActions.logoutUser(history);\n  }\n\n  render(){\n    return null;\n  }\n}\n\nLogoutView.propTypes = {\n  authActions: PropTypes.object.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  authActions: bindActionCreators(authActions, dispatch)\n});\n\nexport default connect(null, mapDispatchToProps)(withRouter(LogoutView));\n","import React from 'react';\n\nconst NotFound = () => {\n  return (\n    <div className=\"not_found\">\n      <h1>Not Found</h1>\n      <p>Oops! Something went absolutely wrong. 404</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <footer className='footer'>\n      <span>git cheat sheet | @2017</span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, Switch, BrowserRouter as Router, Redirect } from 'react-router-dom';\nimport ManageRegisterPage from './components/auth/ManageRegisterPage';\nimport ManageLoginPage from './components/auth/ManageLoginPage';\nimport SearchInput from './components/cheatsheet/SearchInput';\nimport ManageCheatSheetPage from './components/cheatsheet/ManageCheatSheetPage';\nimport AddCheatSheetForm from './components/cheatsheet/AddCheatSheetForm';\nimport ManageCheatCommandsPage from './components/command/ManageCheatCommandsPage';\nimport AddCheatCommandPage from './components/command/addCheatCommandPage';\nimport NavigationBar from './components/auth/NavigationBar';\nimport LogoutView from './components/auth/LogoutView';\nimport NotFound from './components/common/NotFound';\nimport Footer from './components/common/Footer';\n\nconst SecretRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={(props) => (\n    localStorage.getItem('token')\n      ? <Component {...props} />\n      : <Redirect to='/Login' />\n  )} />\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App container-fluid\">\n          <NavigationBar />\n          <Switch>\n            <Route exact path=\"/Register\" component={ManageRegisterPage} />\n            <Route exact path=\"/\">\n              <Redirect to=\"/Register\" />\n            </Route>\n            <Route exact path=\"/Login\" component={ManageLoginPage} />\n            <SecretRoute exact path=\"/cheats\" component={ManageCheatSheetPage} />\n            <SecretRoute path=\"/cheats/:cheatId/commands\" component={ManageCheatCommandsPage} />\n            <SecretRoute path=\"/cheats/:cheatId/add-command\" component={AddCheatCommandPage} />\n            <SecretRoute path=\"/createCheat\" component={AddCheatSheetForm} />\n            <SecretRoute path=\"/logout\" component={LogoutView} />\n            <Route component={NotFound} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","export const initialState = {\n  auth: {},\n  cheats: {\n    docs: [],\n    total: 0,\n    limit: 0,\n    page: 0,\n    pages: 0,\n    currentCheat: {},\n  },\n  singleCheatSheet: {\n    commands: [],\n    title: '',\n    _id: ''\n  },\n  commands: {\n    docs: [],\n    total: 0,\n    limit: 0,\n    page: 0,\n    pages: 0,\n  }\n};\n","import * as actions from '../actions/types';\nimport  {initialState}  from '../store/initialState';\n\n\nconst cheatReducer = (state = initialState.cheats, action) => {\n  switch (action.type) {\n  case actions.CREATE_CHEAT_SUCCESS:\n    return [\n      ...state, Object.assign({}, action.payload)\n    ];\n\n  case actions.CREATE_CHEAT_FAILURE:\n    return {...state, error: action.payload};\n\n  case actions.LOAD_CHEAT_SUCCESS:\n    return [ ...action.payload.docs];\n\n  case actions.LOAD_CHEAT_FAILURE:\n    return action.payload;\n\n  case actions.SEARCH_CHEAT:\n    return action.payload;\n\n  case actions.DELETE_CHEAT_SUCCESS:\n    return state.filter(\n      cheat => cheat._id !== action.payload.cheatId\n    );\n  default:\n    break;\n  }\n  return state;\n};\n\nexport default cheatReducer;\n","import * as actions from '../actions/types';\nimport  {initialState}  from '../store/initialState';\n\n\nconst commandReducer = (state = initialState.commands, action) => {\n  switch (action.type) {\n\n  case actions.ADD_COMMAND_SUCCESS:\n    return [\n      ...state, Object.assign({}, action.payload)\n    ];\n\n  case actions.ADD_COMMAND_FAILURE:\n    return {...state, errors: action.payload};\n\n  case actions.LOAD_COMMANDS_SUCCESS:\n    return [ ...action.payload.docs];\n\n  case actions.LOAD_COMMANDS_FAILURE:\n    return action.payload;\n\n  case actions.DELETE_COMMAND_SUCCESS:\n    return state.filter(\n      command => command._id !== action.payload.commandId\n    );\n\n  default:\n    break;\n  }\n  return state;\n};\n\nexport default commandReducer;\n","import * as actions from '../actions/types';\nimport  {initialState}  from '../store/initialState';\n\nconst singleCheatReducer = (state = initialState.singleCheatSheet, action) => {\n  switch (action.type) {\n  case actions.LOAD_SINGLE_CHEAT_SHEET_SUCCESS:\n    return {\n      commands: action.payload.commands,\n      title: action.payload.title,\n      _id: action.payload._id\n    };\n\n  case actions.LOAD_SINGLE_CHEAT_SHEET_FAILURE:\n    return action.payload;\n\n  case actions.RESET_SINGLE_CHEAT_SHEET:\n    return  action.payload;\n\n  default:\n    break;\n  }\n  return state;\n};\n\nexport default singleCheatReducer;\n","import * as actions from '../actions/types';\n\nconst authReducer = (state = {}, action) => {\n  switch (action.type) {\n\n  case actions.REGISTER_USER_SUCCESS:\n    return  {\n      ...state, isRegistered: true, data: action.payload\n    };\n\n  case actions.REGISTER_USER_FAILURE:\n    return  {\n      ...state, isRegistered: false, data: action.payload\n    };\n  case actions.LOGIN_USER_SUCCESS:\n    return  {\n      ...state, isAuthenticated: true, user: action.payload\n    };\n  case actions.LOGIN_USER_FAILURE:\n    return  {\n      ...state, isAuthenticated: false, user: null\n    };\n  case actions.LOGOUT_USER_SUCCESS:\n    return  {\n      ...state, isAuthenticated: false, user: null\n    };\n\n  default:\n    break;\n  }\n  return state;\n};\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport cheatReducer from './cheatReducer';\nimport commandReducer from './commandReducer';\nimport singleCheatSheetReducer from './singleCheatSheetReducer';\nimport auth from './authReducer';\n\nconst rootReducer = combineReducers({\n  auth: auth,\n  cheats: cheatReducer,\n  commands: commandReducer,\n  singleCheat: singleCheatSheetReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport jsonwebtoken from 'jsonwebtoken';\nimport store from './store/store';\nimport * as actionsTypes from './actions/types';\nimport * as actions from './actions/cheatActions';\nimport * as serviceWorker from './serviceWorker';\n\nconst token = localStorage.getItem('token');\nif(token) {\n  const user = jsonwebtoken.decode(token);\n  store.dispatch({\n    type: actionsTypes.LOGIN_USER_SUCCESS,\n    payload: user\n  });\n  store.dispatch(actions.fetchCheatSheets());\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}